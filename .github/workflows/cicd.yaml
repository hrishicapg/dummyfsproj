## Follow the repository's Code Tour for configuration.

name: Build and Deployment

on:
  push:

env:
  DOCKER_FILE: "Dockerfile"
  CONTAINER_PORT: 5000
  KUBERNETES_NAMESPACE: eaas
  KUBERNETES_APP_NAME: eaas-api
  CONTAINER_REGISTRY_NAME: ghcr.io
  HELM_CHART_RELATIVE_LOCATION: gitops/chart
  TERRAFORM_TEMPLATES_RELATIVE_LOCATION: gitops/terraform
  APPLICATION_PQDN: eaas-api # as in test.lemans-sandbox.rockwellautomation.com
  HELM_TIMEOUT: 600s

jobs:
  config:
    runs-on:
      - ubuntu-latest
    outputs:
      deployment_environment: ${{ env.DEPLOYMENT_ENVIRONMENT }}
      release_suffix: ${{ env.RELEASE_SUFFIX }}
      kubernetes_app_name: ${{ env.KUBERNETES_APP_NAME }}
      terraform_location: ${{ env.TERRAFORM_TEMPLATES_RELATIVE_LOCATION }}
    steps:
      - name: Set Sandbox values
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "DEPLOYMENT_ENVIRONMENT=sandbox" >> $GITHUB_ENV
          echo "RELEASE_SUFFIX=development" >> $GITHUB_ENV

      - name: Set Non-Prod values
        if: startsWith(github.ref, 'refs/heads/hotfix/') ||
            startsWith(github.ref, 'refs/heads/release')
        run: |
          echo "DEPLOYMENT_ENVIRONMENT=nonprod" >> $GITHUB_ENV
          echo "RELEASE_SUFFIX=prerelease" >> $GITHUB_ENV

      - name: Set Production values
        if: github.ref == 'refs/heads/main'
        run: |
          echo "DEPLOYMENT_ENVIRONMENT=production" >> $GITHUB_ENV
          echo "RELEASE_SUFFIX=release" >> $GITHUB_ENV

      - name: Set Demo values
        if: github.ref == 'refs/heads/demo'
        run: |
          echo "DEPLOYMENT_ENVIRONMENT=demo" >> $GITHUB_ENV
          echo "RELEASE_SUFFIX=demo" >> $GITHUB_ENV

      - name: Set generic values
        run: |
          echo "KUBERNETES_APP_NAME=${{ env.KUBERNETES_APP_NAME }}" >> $GITHUB_ENV

  build:
    needs: [config]
    # needs: [lint]
    timeout-minutes: 20
    runs-on:
      - ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Fetches entire history, so we can analyze commits since last tag.
          fetch-depth: 0

      # Build the Docker image tagged for develop(sandbox)
      - name: Build the Docker image for sandbox
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release'
        run: |
          docker build . --file ${{ env.DOCKER_FILE }} --tag buildimage
        # Add these steps back when we are capturing unit tests and code coverage
        # docker run --name test_container buildimage echo test
        # docker cp test_container:/usr/src/app/angular-app/test ./test

      - name: Run the Docker container
        run: |
          docker run -it --name cont -d buildimage

      - name: Check logs
        run: |
          docker exec -i cont bash
          ls /app